<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAwFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAABbqSURBVHja7Z0LvI9V1sd/5zgO57gd4eDkfqmUbiKURI1ymRl5DyWKCKG8o16VChHq
        jXkNYhSlkUnl3lBqhqmJLjKvQhKTRgnlEo7bcW7N+jvhf9n7+e/nsp/L+a+1PvqcT/7n+T+e/X32Xmv/
        1t4bANLRHx/iGH5md9GPYS36Ig2eWzrG4ig3iCd+BKNR1msA+nHze+g56O41AOu4GTz1RV4PAzz2e+tf
        oLq3ABRxI3jq/0YWA8AAMAAMAAPAAPgEgALsxW52Db6Pnm0AANiLFnRTtdgd9iy0wg9BAGA3LgSbDquD
        74MBQG1uKy1WD3sYAAaAAWAAGAAGgAFgABgABoABYAAYAAaAAWAAGAAGgAFgAIILQDncjIcxEU+76o+h
        CyoxAN4DUB/zcNijqtqlaMoAeAtAZSz0tKRiNWoxAF4CcDdOewpAER5iALwDIAVzPC+repNiEAbAIwDK
        0eP3GoBPUIUB8AqA8ljpOQCfoioDwAAwAAwAA8AAqFmyQ84ACAE4jXl4FI9p8EcxEydsAFAWN9JVpmIG
        nnPEJ2EgGjAAsbtfdNR2v1fjgGUAqlHTH3S49ynAJmQr9gUJBEAXbffbwjIAZTAFhVqGoN24iQHwPwBt
        sF9bFLIQ6QyAVQBSyN0AYITGMPRbpUiAAYgIxxqhGx6mbnk25tDYPBK3o4nClK51ACZqBGA/rmQA1AHI
        RG+8gV1R8fxJ+ublGBBnZaJ1AIZpXAr/NeowAGoAlEMvrEWu9FHmYQOGoLIGAK4k5HQBMBupDIAKAI3w
        Mo7HfZynsQRXOQ5AMkUBJ7Q0/ybp3TIAEdYKHyk/1M241WEAgDTcj204RcmgU56Pw/Tvb80TQSoAtKY3
        xcx79Q06OwwAkETReg8MxQMO+UC0N1GVmNAAXIxPTHet29DSYQBYDPIIgIpYYGl0/StqMAAlAYBBBnG/
        kRfiCeq2GYCAA1AHnxk2stEM/c6osm8GIIAADBNsjxbyXMoKJlFkPgQT8XfprsXjI/oABiBwAFTCasm7
        PRiZ5z5VGXdQ6if63EbUZACCDEBLQZP9jB0CCbU5/l94tkYXBiDIAAwVjPHHcbfwap2EBRtPMgDBBSAJ
        UwVN+jYlhiJLxTzBp19FGQYgqACkCVYOGi3mukuQML6PDAYgqABUxDuCAeC30uu1wiFBGFjNUQCSuCrY
        PQBEOUCOQdFoM0Hh1uawbMEeAGm4mSKK6Q5VBc/AFIpwGjMARgCUxwqB3NtXer1OhEf059eHrf2zA0Am
        NdlPDkvBhfiCEliuCpYCUBpzBY9tFkpJrjdW8OkV9C32ASiLaZpqgvaiAwMgTwNHCR7ZLlwtvFoDoWQ8
        PWwu0DoANwjnI5zxJVwVLAfgN8IaoEWCRitPPUPs/eTjXkfmAR7WWBT6HRoyADIAamOrcEXNK1EP7UJ6
        03OFyy6aOgIAVwV7BEApGnvFj+1zPIJrqeGzaEAYho8lquBrEefrWgfgfo1VwTuUnlnCqoHX40dpDH0Q
        32AnvUEFkk8cQ9eIa1kH4Ap62LoAmEXBLgMgBSCFcmarj/b1qPDKTlXwg5qqgjfics4C5AAkoSZlAtYq
        ggowFXUjsmx7VcFDKGs/QVd1qio4D4ewjO7JLxNBKaiO5uiOoRTyjqBBrwfdW3XjpXd6AUhGE4yj1O6k
        5bcrF19iEq45N29gdyq4Lm7DYIdqgu9HP7RBBZ/MBGahJ+bgM3o+J3+JpgrppwMUac3BHRE1FS4A8Otf
        svoJ+NqhNGsKLmMxSGp16I3fiFPS53eKntGD4kV3egDoRJF7f7olJ0fa7fgdKqIZAxAzw3kn1ivsfFBA
        eVb32CVsegAYTt3OSceDrTwsxAAGIMJqUN+Yo/wEj9BwWlU/APmU3OnKuQ8QBgzAWauPpSafdCFei1zJ
        zNvEBReA2haf/bLwaMA7AAopITtMb/SP5AfopxOWd/BJTAAyMN/yKzP3fO7iPgDHsAPL8X+URmWjHWWt
        V5A3p5+y6f/8nujcbmJMS1wAkjFSMBiqJ9cPnVVY3QQgB+9jLGUIdQ22gkmnb78Vo7HGROlGIgLQDntt
        7mp0rbsA7MOL6IwLTHRwN2IG3QsDILKqWCV9GiewBW9gOqZRuLfJYPJ7PtLcAuA4XkVrJbkkemLzGryg
        cBhN4gEwQtL951JrdKcrplEHn4SyqEkD60rJgR6H0N4dALajj1K9jNjK4L/iTiiZBaDUma3pnPAkTwC4
        VqJrHiAwMgR96aOCSuuQzwypBLoB+IeyVCK3S+N8hzoA6eiICXgesx3y5/A7NHEZgIqSM5oO415JcWop
        DMZR4QYcjXUDsBoXOdJ51sISBwCoQQPKUcdPLPoKvaUlrjoAuE8451+Ipw0G2VRMEbT0ceqbtQLwmaJO
        rmINqC+xB0BZCir1TET9oLg5thMANKX3VnQPH8TZX7ExvhQWsmgE4Cfc5mgI1Q7f2wLgRsd3Cg+fWyvn
        CgBpeEmi9vWJ85tJmCwcoDUCMFNp80QzUx/jJPPeagA8orUquJErAPSSbKNRSINthzh7LncVVGfv0gfA
        bjRzPI1qKOzGVAGYEPiq4IbC/RPO38OzhhvWNhVUZuboA+BFC3l/fHvGBgBDNZ0WUJzq1tIOQKpwoX1k
        QPoxJc1lJL9fVzCEntYFwElka5lKaSucIFYDoCl2agNgpgtVwb9Rmhw/QqGuOPNqQsFqbB6gCYDtcWJS
        q5ZBjFsFIBnDpBtR2fMNv5Sr6QTgQqw1sXdxH0FQKlp2u1sXAF/Swx6AgQ77AAzBehvzAGVwLz4nCPKQ
        75Dn4gAWKUc71gEohadMDWAnMD9mA+unBJ/7WBcAhY494mgvtDkVXAtd0N8xJHujVdjKZX0AtMc+0/3S
        v/BA2MRwHeGE+ktcERQEMchI+zNW/Zeh9Rm9IgmjBGuvTmEwAxAEAEZQzyc6VeEl/FW6pO78DMUoVMN1
        QmH9m1DswgD4HQCZ9rcKVZCJMYJrRpeDr5EEkPNCy27tA/AXzwEoycfHy7S/H4rVfMpt2lALWCkOyyle
        v2UXAPEWMO76ShOBWNAAGCTU/oowPkyBvADDLazAWlpcGGoXAFBqle8xAI8BJRSAppLJ73UxM49XYYGp
        tc/7z27Vax+ATLztafN/ZOL45mABINP+fhLus1ge92CL8lObfFY6sg9AqGJnuaaV9/ETndVnq1tLIAA9
        JTOX06Q66yV4Xqnk5VO6FzgHQGiz92w842CplYq/gEnoFbaFZEkDoIFE+9toKD2XRfe4pzMdRY/zv+AM
        AGcnLFNc9FIImpkBIBV/kCyr6R33e+riWcMt8V4I33XJSQDYnAPg15JK3rlKFdYpuFUqHn0RWcbKAPgR
        gCx8IGy8bVEnKBlpn+K92U6if+QHGQD/ASDT/k7hPuXv6iDZmW1B9JwJA+A/ANpJtL/FkmM2Yq269Jym
        GOmaAfAbAFUk8yq7lBPeJDwuFIlOY3jshxkAvwEgXveXj0eUF6Jdh++ECK0QLc5lAPwFQAuJ9veOsuKZ
        geXCK+zBDaKPMwB+AkCu/d2k/C0PCFcDF2CMeOUgA+AnAFS0P2O7Cv8SIvRezDHcDIDvAJBpf2uVVh2E
        rBxeEV7hIDrJfoUB8AsA5rQ/sfWViHKT5esWnASgAqUwieUZcdbjmQHAvPYXbRcJD9yJ0P70AXAFJmIV
        Psb6BPJP8He8gM7SxVhmALCm/YVbGcyMr/3pAuC3+MrzwjCv/DDGFm+3ZAMAO9rfWeuGI/G1Pz0AyDYt
        SBQ/YXAOohoA9rS/kNURLpqL0f70ADAuoZu/OMnKsAxADXKx9veVsvaXgmeEeyfEaH86ACiHNxMegL24
        xCIA39DTHivU/nJD63YUrYPgwN2Qvxa/Xto+ABkUCiU6AAeV9kITAbCTRvk9NrW/TPxNVfvTA8B7DICS
        UicC4JBkF0T72l+eSPvjHsBvAIjdnPa3W137YwCCAYAZ7W+ZGe3PLQCKcJQeSsn0Q4KVUM4CoFH7cwuA
        YxiC5vRQSp63oIh7q1YAzGh/V2KHOe3PLQAO48YSK+lUFiy8cBKAdTq1P/cAaF9iAagi2KfIOQDMaH99
        zGt/DIDfAdCs/TEA/gZAu/bHAPgZABe0PwbAzwC4oP0xAP4FwBXtjwHwKwAuaX8MgF8BcEn7YwD8CcAu
        tFT89iQ8Zkf7YwC8BKCu5NAbbev+GAB/AdBGsuO/i9qfewC0LbEAZFjUApxZ95drT/tzC4DjGImO6FwC
        vRN6YrslAAZJzvtzVftzC4AiyklzSqgfEwRh8QG4THnPT5k5ov25BQBXBEWaR+v+GAC/ANBTcF5PyKe7
        rf3pAYCrgo0B8GzdnzsAVMIaBsBgXUBpybq/415ofzoASDc82Tsx/HuDU9Jl6/5eVtb+ajun/ekAAJTy
        JToAq6Qz+VnSdX+qJ6s7qv3pAaCR4Zm2ibBAXHZOaimMk6z7G+KN9qcHgNDelp9KTvYu+b4Hw6SxvP09
        Px3W/nQBANTHcLyCFXgrgXwlFmIiWkmnYWV7fn7rnfanD4CQpVKnVCGBvHycnUFc3vPTewDYwk225+e7
        Xmp/DIBb5sGenwyAn8z+np9atD8GwB3zrfbHALhhTmh/ffRofwyAGybb89MH2h8DoN98rf0xALrN59of
        A6DbfK79MQB6zffaHwOg0wKg/TEAOi0A2p8bACT7xJNcbn6d2t+D+m7bSQDqoB+exXO+8Bn052nKyN07
        Xj4Q2p9OADphg2ALRW89F2vQypXmd0L7W6pf+9MHQEvJcWXe+3rlCRjr5tN1f+4BkIoXfVy09aR2AAKj
        /ekCoIavD435m3IUbs0CpP3pAkB9H2wv/J/K47AVC5T2pwuAavjMxwCs0DWJcsZ0an/19UevzgBQitI/
        vzZ/AYZpfH4B0/70ZQGN8aFPAXhT41xAaUyxrf3d5qb2p3Me4HJKhUKHKRT6xvMoDZtN76g+C5z2p3cm
        sDzaoD/ls/7w+9EXzbW+RQHU/lgMcs70an8VGAC/WyC1PwbAKauCt4Ko/TEATllAtT8GwBkLrPbHADhh
        Adb+GAAnLMDaHwNg33Rqf53d/+cwAOYs4NqffgCSkGLTS/kagGzhnp9FmKqs/TXG526t+3MbgIYYgmmY
        bdNnYTRFwqm+bP50Sex+CB0Vr+Cx9qcPgCR0xSbh1KgV34+Jmqt4rFl9SfpXSP/2e5WqDrp5q/3pA+B6
        yaOx6nl4woeDQQd6U2V3fBILcE2c3/dc+9MFQBm87LiO/w0u8R0A98fp477GcFSW/rYPtD8VAL63AEBN
        fKWhpr+Xz5o/CdMVeq6/UASTLOk/PNf+Yq1Q0APUMn0V2XlYdrzQhKwa35IpgKtAf+zMs1XEu4p7h45G
        9ZjfzsRq77W/WDsYc0NbLJRQVdOwW/AJE5m10VubiZvwEP6IxXiLYvg/Ujd+NQ1ZVqw2dfGqdYhrcCt1
        +eH38bhQ+zvt3J6f1mxFzC39ycLjSaao3WkAPkWWzX9bKlriaWyIirsL6Q39E1pb6Ava4rCJ+z+ASdQz
        nrXrqGcVfeo7b7L/89Yx6sb2oJ2l6zTA+442/wGbeXEK5SVzJCUbxZHOCNPF4gNNrn0swnp0P5PeZWC5
        5DP/to25TSuFuynePn87fSyPkk3wCn6k0C3fpuchh5Kl7raSwIvxB/wQN8icikqmrvp7CyAfxSzKZoYJ
        tT9fABAanZrhKRohF2M8/WRnVX0amlPkPtCm98Mttgq5y1FStUWpcfLxvyamX8pTfB871r+tsCRmO/ZK
        /84HAJxtvHSUBGuMuRKpReTHcI/ylbME6x+PoQsa0Tt+xPJQ5xsASoKlUN6wwWQDbDE47SfSWgvWABSf
        FVQG3fCRxQMzGADHrDLGCpLa+D5BcdjrK9i7+8Nz9Xu1aTjZzwB4Zw3xqsX9SbYprh2aKFwBVDqs/+lA
        2X8BA+CFtZKs0YkM+Y4Lu+k83KvwDeLD8UbGzPY9bnJOlAFwwLoKzvOOrtafiwEUIcwQVvPNV5j6qo7N
        grnKboIpsesp5z/JALhlyegd5537Ds/i8l+66vL4szAQrBn3e5oJRvh9aCr8bD0TpykzALasNAbjgKGe
        sADXRkxttRdM5xod/HrW7hT0HRuEqwAupR7lOAPgTto3zDAD3y6o0qmKTwWYZEuun05eXJz2pOD6r8YM
        HanoIdntgwHQMIl9n4E4k49lQpk1VVCSXYihEZ8pQzlFNsZgDhZjKebhKdyOlYLvGBMzVTTJlFzEANga
        +/sZZP0/YbR0hd0kwedHnfvbatTY87EzKow7KZgDOIU7wq6ahLaUBBbFOWI6168AlKMwqAb9Nzh2O36U
        Puid6BWhxUea6KjrKWf+5gL0p3RSNYLfj6vPXbMihkuWep5PNhdStrLHjwCkUYDzJnbQiLkMPeOchekX
        a0eNLHvUH8dZXikSdV9GWQoPV0k1O5FvOidZXUrRgPFv7sOjqITagnzFcwDSMT4sZj2OCQFA4HL8U/qo
        36XmMLZsgVj0Pj0FszsdLjrzpEJh3+dxPrkWt5zJROr5sQe4J2qly3HqBfxtWfSmygowlijsrCcq7c4z
        PYUb0hBC9zI5jhKYg2moc25+wIcAxNbxLPW1MJyG56Sh1utKD7MNhYhO1Cz3wXVxw74vcVdYxYEvAYh9
        GFsFFa3+sUHSSZYluFDpCs0Np45UPYdyhV1xwr7FuCpqhtCHABwSrFLxLwBtpQ99RVgBprFdFrdYTK3e
        rzBO2DcSGTFTxD4E4L2YW3rDt2FglnSOfS0aK1/lYoNS0diOPtcSHuvwK0FtpS8BuDsqiMmRTIv6YeJ3
        ouSt24prTVxHrQc4hU/wDCXI95le8pKDqefCvgAAkIZRYVFxDsZ4tUo1rnWSjN170MXUda6MW7lTiA/Q
        +5csv4KgjzQO+3pLxeV6/pwIClW0vUa57Cbq/LN92/y1qJsXr8l9wGQl8zVxgsCDlOCdb5RKkgVd4rBv
        UVTYFwgAQlaWeM/08RRQMsZKEq7nTSetrSUbPBf7DvSIWJFQGf9QbP49eDQm7AsMAH63lpKZ9vclo62R
        3WKwxn8z5RmRVtVg1jE8J1iLm+P2RAyARSsnrOP5GXvR3sLVekjlnq0CFaGmZEO36Nk+lSX1DIBF6y48
        lKWAwlcry9gGSKqH9wj3+akXNwvYil6KkRMDYMlES7JC/g6qWbre/0iKx4YKu/DLDWTn0OLuhYZhHwPg
        gDUQjv8/WFzFDAonRU05VxJM3mCgHOzBCFPLSxkAS3aJcOJmskHJh7GNFy4OuUzy6Zslal8RBaDtTSag
        DIAlyxSsv91sYuo3NgYoiIkmRkg/fRG+FS76nmJhIx0GwOIcwPiYGfpBNq7XiMK26BoiuY6YilkCuexO
        S5vMMAAWrXZECUgBZtvcVeuuiLnA7+JMJTeOmAw+jdeVj4RiAByzephKj+oojcdb8QSq2LxaCrpiDUGQ
        QxH+CoUJnEaU5+/EYQoHN2KYyV1FAgFAMr1jbcjruH1YgQkrTc3wK4r8azt0jxloQXn/1Yp9SWnKRdrh
        epu7+fsUgOoYR1HwT+Tb8JSvq4GC34/5EIBM/DlMZinCAtsdLFugAHgias1LPv6bWyqRAIjdT2u1jTCH
        LXAAnBIsrOLEJIEAcGa3cLYSBAAfGsUAcFsxAGwMABsDwMYAsDEAbAwAGwPAxgCwMQBsDAAbA8BWogG4
        kNtKi9Xx40aRRYI1ty3opmqxO+xZaCXYnciHABQQArvZNfg+wXaUPgSA3U1nABgABoABYAAYAK8shxvB
        U/d8Y9513Aie+kKvN+frZ7BpGrtuP+r9xrzpeJIR8MiPYLQfdmZNp15gnXAjNnZ9noMP0Nf7vVn/AwPn
        V4ftGn+gAAAAAElFTkSuQmCC
</value>
  </data>
</root>